name: Scheduled deploy

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
      - name: Check Supabase connection
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "Checking Supabase connection..."
          node -e "
          const { createClient } = require('@supabase/supabase-js');
          const supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);
          supabase.from('your_table_name').select('count', { count: 'exact' })
            .then(({ count, error }) => {
              if (error) {
                console.error('Failed to connect to Supabase:', error.message);
                process.exit(1);
              } else {
                console.log('Successfully connected to Supabase. Table count:', count);
              }
            })
            .catch(err => {
              console.error('Error:', err);
              process.exit(1);
            });
          "
      - name: Run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  # ci:
  #   name: CI
  #   runs-on: ubuntu-latest
  #   needs: build
  #   # env:
  #   #   VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  #   #   VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "18"
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Run tests
  #       run: npm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js and cache
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
      - name: Install firebase-tools
        run: npm install --save-dev firebase-tools
      - name: Decode Firebase service account key
        run: |
          echo "${{ secrets.FIREBASE_KEY }}" | base64 -d > ./firebase-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/firebase-key.json" >> $GITHUB_ENV
      - name: Change Firebase project
        run: ./node_modules/.bin/firebase use ${{ secrets.FIREBASE_PROJECT_ID }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Check build output
        run: |
          echo "Contents of dist directory:"
          ls -R dist
          echo "Checking for environment variables in built files (without exposing values):"
          grep -r -l "VITE_SUPABASE" dist || echo "No occurrences of VITE_SUPABASE found"
          echo "File sizes:"
          du -sh dist/*
      - name: Deploy to Firebase Hosting
        run: ./node_modules/.bin/firebase deploy --only hosting
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
      - name: Delete service account key
        run: rm $GOOGLE_APPLICATION_CREDENTIALS
        if: ${{ always() }}
